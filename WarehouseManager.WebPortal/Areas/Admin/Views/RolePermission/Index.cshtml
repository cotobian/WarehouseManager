
@{
    ViewData["Title"] = "Phân quyền Chức danh";
}
<style>
    .list-group-item:hover {
        cursor: pointer !important;
    }

    .list-group-item .active{
        background-color: blue;
        color: white;
    }
</style>

<div class="card">
    <div class="card-header">
        <h3>Phân quyền Chức danh</h3>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-3 col-lg-3 col-12">
                <div id="listview" class="listview">
                    <label class="control-label">
                        <h4>Danh sách Chức danh</h4>
                    </label>
                    <ul class="list-group" id="role-list"></ul>
                </div>
            </div>
            <div class="col-md-9 col-lg-9 col-12">
                <div class="container-fluid">
                    <label class="control-label">
                        <h4>Danh sách Phân quyền</h4>
                    </label>
                    <div class="row">
                        <div class="container-fluid">
                            <button class="btn btn-success" style="margin-bottom:10px;" onclick="Update()"><i class="fa fa-save"></i> Cập nhật</button>
                        </div>
                    </div>
                    <table id="truckTable" class="table table-striped table-bordered" style="width:100%">
                        <thead>
                            <tr>
                                <th></th>
                                <th></th>
                                <th data-name="functionName">Tên chức năng</th>
                                <th data-name="hasView">Quyền xem</th>
                                <th data-name="hasCreate">Quyền thêm</th>
                                <th data-name="hasUpdate">Quyền sửa</th>
                                <th data-name="hasDelete">Quyền xóa</th>
                                <th data-name="hasApprove">Quyền duyệt</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        var dataTable;
        $(document).ready(function() {
            //load roles list to the left sidebar
            $.ajax({
                url: 'Role/GetAllRole', 
                type: 'GET',
                dataType: 'json',
                success: function (roles) {
                    roles.data.forEach(function(role){
                        $('#role-list').append('<li class="list-group-item" data-role-id="' + role.id + '" onclick=GetPermission(' + role.id + ')>' + role.name+ '</li>');
                    });
                }
            });

            //first load empty permission
            dataTable = $("#truckTable").DataTable({
                "ordering": false,
                "ajax": {
                    "url": "RolePermission/GetRolePermissionByRoleId?roleid=" + 0,
                    "type": "GET",
                    "datatype": "json",
                },
                "columns": [
                    { "data": 'id', "visible": false },
                    { "data": 'parentId', "visible": false },
                    { "data": 'functionName',
                        "render": function(data, type, row, meta) {
                            if (row.parentId != 0) return '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' + data;
                            else return data;
                        } 
                    },
                    {
                        "data": 'hasView',
                        "render": function(data, type, row, meta) {
                            return '<input data-command="READ" data-id=' + row.id + ' type="checkbox"' + (data ? ' checked' : '') +  '>';
                        }
                    },
                    {
                        "data": 'hasCreate',
                        "render": function(data, type, row, meta) {
                            return '<input data-command="CREATE" data-id=' + row.id + ' type="checkbox"' + (data ? ' checked' : '') + '>';
                        }
                    }, 
                    {
                        "data": 'hasUpdate',
                        "render": function(data, type, row, meta) {
                            return '<input data-command="UPDATE" data-id=' + row.id + ' type="checkbox"' + (data ? ' checked' : '') + '>';
                        }
                    },
                    {
                        "data": 'hasDelete',
                        "render": function(data, type, row, meta) {
                            return '<input data-command="DELETE" data-id=' + row.id + ' type="checkbox"' + (data ? ' checked' : '') + '>';
                        }
                    },
                    {
                        "data": 'hasApprove',
                        "render": function(data, type, row, meta) {
                            return '<input data-command="APPROVE" data-id=' + row.id + ' type="checkbox"' + (data ? ' checked' : '') + '>';
                        }
                    }
                ]
            });
        });

        //get permission of the clicked row
        function GetPermission(id) {
            $('#role-list li').removeClass('active');
            $('#role-list li').filter(function() {
                return $(this).data('role-id') === id;
            }).addClass('active');
            dataTable.ajax.url("RolePermission/GetRolePermissionByRoleId?roleid=" + id).load();
        }

        //update role permission
        function Update() {
            // Lấy dòng đang được chọn trong danh sách (list item)
            var selectedRow = document.querySelector("#role-list .list-group-item.active");

            // Kiểm tra xem có dòng nào được chọn không
            if (selectedRow) {
                var roleId = selectedRow.dataset.roleId;
                var roleName = selectedRow.textContent.trim();
                var list = [];

                $("#truckTable tr").each(function () {
                    $(this).find("td").each(function () { 
                        var checkbox = $(this).find("input[type=checkbox]"); 
                        var isChecked = checkbox.prop("checked"); 

                        if (isChecked) { 
                            var dataId = parseInt(checkbox.attr("data-id"));
                            var command = checkbox.attr("data-command");
                            var roleid = parseInt(roleId);

                            var dataObject = {
                                "FunctionId": dataId,
                                "RoleId": roleid,
                                "Command": command
                            };

                            list.push(dataObject);
                        }
                    });
                });
                $.ajax({
                    type: "POST",
                    url: 'RolePermission/CreateRolePermissionForRole',
                    data: JSON.stringify(list),
                    datatype: 'json',                
                    contentType: 'application/json;charset=utf-8',
                    success: function (data) {
                        if (data.success) {
                            dataTable.ajax.reload();
                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "success"
                            })
                        }
                        else {
                            dataTable.ajax.reload();
                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "error"
                            })
                        }
                    }
                });
            } else {
                $.notify(("Không có chức danh nào được chọn."), {
                    globalPosition: "top center",
                    className: "error"
                });
            }
        }

        //checkbox clicked event
        $('#truckTable').on('change', 'input[type="checkbox"]', function() {
            var checkbox = $(this);
            var data = dataTable.row($(this).closest('tr')).data();
            var isChecked = $(this)[0].checked;

            var columnIndex = $(this).parent().index();
            if (data.parentId == 0) {
                var rowsWithMatchingParentId = dataTable.rows().data().filter(function(rowData) {
                    return rowData.parentId == data.id;
                });
                var rowsArray = rowsWithMatchingParentId.toArray();
                for (var i = 0; i < rowsArray.length; i++) {
                    var rowData = rowsArray[i];
                    var row = dataTable.row(rowData).node(); 
                    $("#truckTable tr").each(function() {
                        if ($(this).find("td").eq(columnIndex).find("input[type=checkbox]").attr("data-id") == rowData["id"]) {
                            $(this).find("td").eq(columnIndex).find("input[type=checkbox]").prop("checked", isChecked);
                        }
                    });
                }
                dataTable.draw();
            }
        });
    </script>
}